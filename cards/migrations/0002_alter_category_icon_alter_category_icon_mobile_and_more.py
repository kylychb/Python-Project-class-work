# Generated by Django 5.1.1 on 2024-10-08 06:40

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cards', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='icon',
            field=models.ImageField(blank=True, default='', upload_to='category/icon', verbose_name='Иконка'),
        ),
        migrations.AlterField(
            model_name='category',
            name='icon_mobile',
            field=models.ImageField(blank=True, default='', upload_to='category/icon_mobile', verbose_name='Иконка для мобильного'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(default='', max_length=50, verbose_name='Название категории'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name_en',
            field=models.CharField(default='', max_length=50, null=True, verbose_name='Название категории'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name_ky',
            field=models.CharField(default='', max_length=50, null=True, verbose_name='Название категории'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name_ru',
            field=models.CharField(default='', max_length=50, null=True, verbose_name='Название категории'),
        ),
        migrations.AlterField(
            model_name='item',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='cards.category'),
        ),
        migrations.AlterField(
            model_name='item',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Время создания'),
        ),
        migrations.AlterField(
            model_name='item',
            name='description',
            field=models.TextField(default='', verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='item',
            name='price',
            field=models.CharField(default='', max_length=20, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='item',
            name='title',
            field=models.CharField(default='', max_length=255, verbose_name='Заголовок'),
        ),
        migrations.AlterField(
            model_name='itemimages',
            name='image_mobile',
            field=models.ImageField(upload_to='item', verbose_name='Изображение для мобильного'),
        ),
        migrations.CreateModel(
            name='ItemParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('Новый', 'new'), ('Бу', 'used')], default='', max_length=255, verbose_name='Состояние')),
                ('mileage', models.IntegerField(default=0, verbose_name='Пробег (км)')),
                ('car_body', models.CharField(choices=[('Седан', 'sedan'), ('Хэтчбек', 'hatchback'), ('Универсал', 'wagon'), ('Купе', 'coupe'), ('Кабриолет', 'convertible'), ('Кроссовер', 'crossover'), ('Внедорожник', 'suv'), ('Минивэн', 'minivan'), ('Пикап', 'pickup'), ('Лифтбек', 'liftback')], default='', max_length=255, verbose_name='Кузов')),
                ('fuel', models.CharField(choices=[('Бензин', 'Gasoline'), ('Дизель', 'Diesel'), ('Электрический', 'Electric'), ('Гибридные', 'Hybrid')], default='', max_length=255, verbose_name='Топливо')),
                ('color_car', models.CharField(choices=[('Белый', 'White'), ('Черный', 'Black'), ('Серый', 'Gray'), ('Серебристый', 'Silver'), ('Синий', 'Blue'), ('Красный', 'Красный'), ('Коричневый', 'Brown'), ('Бронзовый', 'Bronze'), ('Зеленый', 'Green'), ('Желтый', 'Yellow'), ('Оранжевый', 'Orange')], default='', max_length=255, verbose_name='Цвет')),
                ('availability', models.CharField(choices=[('В наличии', 'In stock'), ('Нет', 'No')], default='', max_length=255, verbose_name='Наличие')),
                ('technical_condition', models.CharField(choices=[('Новый', 'New'), ('Как новый', 'Like new'), ('Хорошее состояние', 'Good condition'), ('Удовлетворительное состояние', 'Satisfactory condition'), ('Неисправное состояние', 'Faulty condition'), ('После аварии', 'After the accident'), ('Требует капитального ремонта', 'Needs major renovation'), ('На запчасти', 'For spare parts')], default='', max_length=255, verbose_name='Техническое состояние')),
                ('customs_clearance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(default='', verbose_name='Описание')),
                ('model', models.CharField(default='', max_length=255, verbose_name='Модель')),
                ('year', models.DateField(blank=True, null=True, verbose_name='Год')),
                ('transmission', models.CharField(choices=[('Механическая', 'Manual'), ('Автоматическая', 'Automatic'), ('Роботизированная', 'Robotized'), ('Роботизированная с двумя сцеплениями', 'Dual-Clutch'), ('Вариатор', 'Continuously Variable')], default='', max_length=255, verbose_name='Коробка передач')),
                ('engine_displacement', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=10, null=True)),
                ('steering_wheel', models.CharField(choices=[('Слева', 'Left'), ('Справа', 'Right')], default='', max_length=255, verbose_name='Руль')),
                ('drive', models.CharField(choices=[('Передний', 'Front'), ('Задний', 'Rear'), ('Полный', 'Full')], default='', max_length=255, verbose_name='Привод')),
                ('vin_code', models.CharField(default='', max_length=255, verbose_name='VIN код')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='cards.item')),
            ],
            options={
                'verbose_name': 'Параметр товара',
                'verbose_name_plural': 'Параметры товаров',
                'ordering': ('order',),
            },
        ),
        migrations.DeleteModel(
            name='ItemParametrs',
        ),
    ]
